Objetivo
Quiero implementar la funcionalidad de ‚Äúvista p√∫blica del leaderboard‚Äù para mi aplicaci√≥n web desarrollada en Next.js con TypeScript y TailwindCSS.

üß† Contexto General

Esta aplicaci√≥n permite a los usuarios conectar creadores de contenido con su audiencia mediante un roadmap de contenido que la comunidad ayuda a definir votando y as√≠ dando prioridad al contenido pr√≥ximo a hacerse.
Actualmente, ya tenemos las siguientes funcionalidades implementadas:
	‚Ä¢ Dashboard del creador de contenido en el que agregar, editar y borrar tarjetas de idea
	. Sistema de votaci√≥n para sumar votos a una idea
	. Signup y login para creadores de contenido
	. Creaci√≥n de enlaces p√∫blicos con fecha de expiraci√≥n 
	. Tracking de cantidad de votos de cada idea

La arquitectura del proyecto usa:
	‚Ä¢	Next.js App Router (o Pages Router, si aplica)
	‚Ä¢	TypeScript en todos los componentes y l√≥gica
	‚Ä¢	TailwindCSS para el dise√±o y los estilos
	‚Ä¢	Por ahora hay login. Los datos se persisten en una en

‚∏ª

üß† Contexto Espec√≠fico de la Funcionalidad

La funcionalidad de ‚Äúvista p√∫blica del leaderboard‚Äù permite que el usuario:
	. Vea en formato leaderboard las ideas propuestas por el creador de contenido
	. Ver las ideas ordenadas de manera tal que las que tienen m√°s votos est√©n m√°s alto en el leaderboard y las que tienen menos m√°s bajo
	. Votar una vez por idea y solo si est√° autenticado con su cuenta de google

‚∏ª

üì¶ Formato de Retorno Esperado

Necesito que me devuelvas:
	‚Ä¢	Descripci√≥n paso a paso de c√≥mo implementar esta funcionalidad en Next.js.
	‚Ä¢	Componente React con TypeScript que contenga esta funcionalidad.
	‚Ä¢	Uso de Tailwind para los estilos.
	‚Ä¢	Validaciones necesarias (usando zod, react-hook-form, o validaci√≥n manual si aplica).
	‚Ä¢	(Opcional) L√≥gica para persistir los datos en la dB o una funci√≥n simulada de API.
	‚Ä¢	Si es necesario, explicar c√≥mo se integra con el resto de la app.

‚∏ª

‚ö†Ô∏è Advertencias
	‚Ä¢	Evit√° usar librer√≠as adicionales que no est√©n mencionadas.
	‚Ä¢	Todo el c√≥digo debe estar tipado correctamente con TypeScript.
	‚Ä¢	No asumas un backend real a menos que lo mencione.
	‚Ä¢	Que el c√≥digo sea claro, comentado si es necesario, y compatible con el estilo de Next.js App Router si no se indica lo contrario.
