🧾 PRD: Importar Ideas mediante un Archivo CSV

⸻

🎯 Funcionalidad a implementar

Quiero implementar la funcionalidad de “importar ideas mediante un archivo CSV”.

⸻

🧠 Contexto General

Esta aplicación permite a los creadores de contenido conectar con su audiencia mediante un leaderboard público donde los usuarios pueden votar y sugerir ideas para nuevos contenidos.

⸻

🧠 Contexto Específico de la Funcionalidad

Actualmente, los creadores pueden agregar ideas de forma manual una por una. Esta nueva funcionalidad permitirá importar múltiples ideas a la vez desde un archivo CSV, ahorrando tiempo en la gestión de contenidos.

⸻

📋 Alcance de esta funcionalidad
	•	Subida de archivo .csv desde un modal o formulario.
	•	Visualización previa de las ideas que serán importadas (opcional, si el CSV es válido).
	•	Validación de estructura del CSV y contenido (campos obligatorios como title y opcionalmente description).
	•	Mostrar errores claros si hay filas inválidas.
	•	Persistencia simulada en LocalStorage o mediante una función API ficticia (según preferencia del asistente).
	•	Compatible con el sistema actual de ideas ya existente en la app.

⸻

🧱 Requisitos de implementación

⚙️ Componente React
	•	Usar React con TypeScript.
	•	Implementar el formulario o modal usando componentes de shadcn/ui (por ejemplo, Dialog, Button, Input, Alert, etc.).

🧪 Validaciones
	•	Usar zod para validar el esquema de cada idea importada:
	•	title: string (obligatorio, no vacío).
	•	description: string (opcional, longitud máxima sugerida: 280 caracteres).
	•	Validar estructura general del archivo CSV (encabezado presente, filas bien formateadas).
	•	Mostrar errores por fila (ejemplo: “Fila 3: título vacío”).

🎨 Estilos
	•	Usar TailwindCSS como en el resto de la app.
	•	Consistencia visual con la interfaz existente.
	•	Indicar feedback al usuario (carga, éxito, error) usando componentes visuales adecuados (ej. Alert, Badge, Toast si aplica).

📦 Persistencia
	•	Guardar las ideas importadas en una función de persistencia simulada (saveIdeas(ideas: Idea[])) que actualiza LocalStorage.
	•	Alternativamente, puede enviar los datos a una función fakeApiUploadIdeas(ideas) para simular un endpoint.

⸻

🧩 Integración esperada
	•	El componente debe integrarse dentro de una sección existente de “Mis ideas” o similar.
	•	Una vez importadas las ideas, deben reflejarse en el leaderboard del usuario (simulado si no hay backend).

⸻

📁 Ejemplo de archivo CSV esperado

title,description
Cómo hacer crecer una cuenta en TikTok,Trucos y consejos prácticos para creadores nuevos.
La mejor hora para publicar videos en Instagram,
Ideas para contenido evergreen,Contenido que nunca pasa de moda para YouTube y blogs.


⸻

✅ Criterios de aceptación
	•	✅ El usuario puede subir un archivo .csv.
	•	✅ Se validan los encabezados y el contenido.
	•	✅ Las ideas válidas se muestran en una lista previa antes de confirmar la importación.
	•	✅ Las ideas se almacenan correctamente (en LocalStorage o función mock).
	•	✅ Se notifican errores claros por fila si hay datos inválidos.
	•	✅ El UI es consistente con el resto del sistema.